type Profile {
  bio          String?
  gender       Gender?
  weight       Int?
  age          Int?
  avatar       String?
  birthday     String?
  height       Int?
  introduction String?
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  phoneNumber String     @unique
  profile     Profile?
  status      UserStatus @default(OPEN)
  isSuperPal  Boolean    @default(false)
  roles       String[]   @default(["USER"])
  views       Int        @default(0)
  /// @DtoReadOnly
  createdAt   DateTime   @default(now()) 
  updatedAt   DateTime   @default(now()) @updatedAt

  followers   Follow[]   @relation("follower")
  following   Follow[]   @relation("following")

  achievements   Achievement[] @relation(fields: [achievementIds], references: [id])
  /// @DtoRelationIncludeId
  achievementIds String[]      @db.ObjectId

  chatroom    Chatroom[] @relation(fields: [chatroomIds], references: [id])
  /// @DtoRelationIncludeId
  chatroomIds String[]   @db.ObjectId

  likes    Like[]
  demands  Demand[]
  orders   Order[]
  posts    Post[]
  comments Comment[]
}
