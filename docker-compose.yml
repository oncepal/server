services:
  oncepal-main:
    container_name: oncepal-main
    depends_on:
      - mongo0
      - redis
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
          - APP=main
    restart: always
    ports:
      - 19960:1996
    networks:
      - oncepal-network
           
  # oncepal-user:
  #   container_name: oncepal-user
  #   depends_on:
  #     - mongo0
  #       - redis
  #   build:
  #     context: ./docker/nest
  #     args:
  #         - APP=user
  #   restart: always
  #   ports:
  #     - 19960:1996
  #   networks:
  #     - oncepal-network

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: password
      REDIS_PORT : 6379
      REDIS_DATABASES: 16
    networks:
      - oncepal-network
    volumes:
            - redis_volume:/data

  mongo0:
    container_name: mongo0
    build: 
      context: ./docker/mongodb
      args:
        MONGO_VERSION: 7
    restart: unless-stopped
    environment: 
      MONGO_INITDB_NAME: oncepal 
      MONGO_REPLICA_PORT: 27017
      MONGO_REPLICA_HOST: 127.0.0.1
      MONGO_COMMAND: 'mongosh'
    healthcheck:
      test: ['CMD', 'mongosh', 'admin', '--port', '27019', '--eval', "db.adminCommand('ping').ok"]
      interval: 5s
      timeout: 2s
      retries: 20
    ports:
      - 27017:27017
    networks:
      - oncepal-network
    volumes:
      - mongodb_volume:/data

networks:
  oncepal-network:
    name: oncepal-network
    driver: bridge

volumes:
   mongodb_volume:
        name: "mongodb_volume"
   redis_volume:
        name: "redis_volume"